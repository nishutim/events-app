{"version":3,"file":"static/js/753.a7683253.chunk.js","mappings":"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","sources":["store/reducers/event/thunk-creators.ts","store/reducers/event/selectors.ts","components/EventCalendar.tsx","utils/validationRules.ts","components/CreateEventForm.tsx","components/modals/CreateEventModal.tsx","pages/EventPage.tsx"],"sourcesContent":["import { EventActions } from '.';\r\nimport { IEvent } from '../../../models';\r\nimport UsersService from '../../../services/usersService';\r\nimport { AppDispatch, RootState } from './../../index';\r\n\r\nexport const fetchGuests = () => async (dispatch: AppDispatch, getState: () => RootState) => {\r\n   try {\r\n      const data = await UsersService.fetchUsers();\r\n      const authUser = getState().auth.user;\r\n      const guests = data.filter(u => u.id !== authUser?.id);\r\n      dispatch(EventActions.fetchUsersSuccess(guests));\r\n   } catch (e: any) {\r\n      alert((e.message));\r\n   }\r\n}\r\n\r\nexport const fetchEvents = () => async (dispatch: AppDispatch, getState: () => RootState) => {\r\n   try {\r\n      const data = JSON.parse(localStorage.getItem('events') || '[]') as IEvent[];\r\n      const authUser = getState().auth.user;\r\n      const events = data.filter(ev => ev.authorId === authUser!.id || ev.guestsId.includes(authUser!.id));\r\n      dispatch(EventActions.fetchEventsSuccess(events));\r\n   } catch (e: any) {\r\n      alert((e.message));\r\n      dispatch(EventActions.fetchEventsSuccess([]));\r\n   }\r\n}\r\n\r\nexport const createEvent = (event: IEvent) => async (dispatch: AppDispatch) => {\r\n   try {\r\n      const data = JSON.parse(localStorage.getItem('events') || '[]') as IEvent[];\r\n      data.push(event);\r\n      localStorage.setItem('events', JSON.stringify(data));\r\n      dispatch(EventActions.createEventSuccess(event));\r\n   } catch (e: any) {\r\n      alert(e.message);\r\n   }\r\n}\r\n\r\nexport const removeEvent = (id: string) => async (dispatch: AppDispatch) => {\r\n   try {\r\n      const data = JSON.parse(localStorage.getItem('events')!) as IEvent[];\r\n      const updatedEvents = data.filter(ev => ev.id !== id);\r\n      localStorage.setItem('events', JSON.stringify(updatedEvents));\r\n      dispatch(EventActions.removeEventSuccess(id));\r\n   } catch (e: any) {\r\n      alert(e.message);\r\n   }\r\n}","import { RootState } from './../../index';\r\n\r\nexport const event_selectGuests = (state: RootState) => state.event.guests;\r\nexport const event_selectEvents = (state: RootState) => state.event.events;\r\nexport const event_selectError = (state: RootState) => state.event.error;","import { FC } from 'react';\r\nimport { Calendar } from 'antd';\r\nimport { Dayjs } from 'dayjs';\r\nimport { IEvent, IUser } from '../models';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n   authUser: IUser;\r\n   events: IEvent[];\r\n   onRemoveEvent: (id: string) => void;\r\n}\r\n\r\nconst EventCalendar: FC<Props> = ({ authUser, events, onRemoveEvent }) => {\r\n   const handleRemoveEvent = (id: string) => {\r\n      onRemoveEvent(id);\r\n   }\r\n\r\n   const dateCellRender = (value: Dayjs) => {\r\n      const formattedDate = value.format('YYYY-DD-MM');\r\n      const currentDayEvents = events.filter(ev => ev.date === formattedDate);\r\n\r\n      return (\r\n         <ul className=\"eventsList\">\r\n            {currentDayEvents.map(ev => {\r\n               const isEventCreator = authUser.id === ev.authorId;\r\n\r\n               return (\r\n                  <li key={ev.id} className=\"eventsListItem\">\r\n                     <span className=\"eventsListText\">{ev.description}</span>\r\n                     {isEventCreator && (\r\n                        <DeleteOutlined\r\n                           className=\"eventsListDeleteBtn\"\r\n                           onClick={() => handleRemoveEvent(ev.id)} />\r\n                     )}\r\n                  </li>\r\n               )\r\n            })}\r\n         </ul>\r\n      );\r\n   };\r\n\r\n   return (\r\n      <Calendar\r\n         className=\"eventPageCalendar\"\r\n         dateCellRender={dateCellRender} />\r\n   );\r\n};\r\n\r\nexport default EventCalendar;","class Rules {\r\n   static required = (message = 'This field is required!') => {\r\n      return {\r\n         required: true,\r\n         message\r\n      }\r\n   }\r\n}\r\n\r\nexport default Rules;","import React, { FC, useState } from 'react';\r\nimport { Button, DatePicker, Form, Input, Select, Space } from 'antd';\r\nimport dayjs, { Dayjs } from 'dayjs';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Rules from '../utils/validationRules';\r\nimport { IEvent, IUser } from '../models';\r\nimport { useForm } from 'antd/es/form/Form';\r\n\r\ninterface Props {\r\n   authUser: IUser | null;\r\n   guests: IUser[] | null;\r\n   closeModal: () => void;\r\n   onSubmit: (event: IEvent) => Promise<void>;\r\n}\r\n\r\ninterface EventFormValues {\r\n   date: Dayjs;\r\n   description: string;\r\n   selectedGuests: string[];\r\n}\r\n\r\nconst CreateEventForm: FC<Props> = React.memo(({ authUser, guests, closeModal, onSubmit }) => {\r\n   const [form] = useForm();\r\n   const [loading, setLoading] = useState(false);\r\n\r\n   const handleSubmit = async ({ date, description, selectedGuests }: EventFormValues) => {\r\n      setLoading(true);\r\n\r\n      const event = {\r\n         id: uuidv4(),\r\n         authorId: `${authUser?.id}` || '0',\r\n         date: date.format('YYYY-DD-MM'),\r\n         description,\r\n         guestsId: selectedGuests\r\n      };\r\n\r\n      setTimeout(async () => {\r\n         await onSubmit(event);\r\n         form.resetFields();\r\n         setLoading(false);\r\n      }, 1000);\r\n   }\r\n\r\n   return (\r\n      <Form\r\n         className=\"createEventForm\"\r\n         name=\"eventForm\"\r\n         form={form}\r\n         autoComplete=\"off\"\r\n         onFinish={handleSubmit}\r\n         initialValues={{\r\n            date: dayjs()\r\n         }}\r\n      >\r\n         <h3 className=\"createEventFormHeader\">Create event</h3>\r\n         <Form.Item\r\n            label=\"Select event date\"\r\n            name=\"date\"\r\n            rules={[Rules.required('Date is required!')]}\r\n         >\r\n            <DatePicker className=\"createEventDatePicker\" />\r\n         </Form.Item>\r\n         <Form.Item\r\n            label=\"Add event description\"\r\n            name=\"description\"\r\n            rules={[Rules.required()]}\r\n         >\r\n            <Input placeholder=\"Type your description here...\" />\r\n         </Form.Item>\r\n         <Form.Item\r\n            label=\"Select guest\"\r\n            name=\"selectedGuests\"\r\n         >\r\n            <Select mode=\"multiple\" loading={!guests} showArrow showSearch={false}>\r\n               {guests?.map(g => (\r\n                  <Select.Option key={g.id} value={g.id}>{g.email}</Select.Option>\r\n               ))}\r\n            </Select>\r\n         </Form.Item>\r\n         <Space className=\"createEventFormFooter\">\r\n            <Button size=\"large\" onClick={closeModal}>Cancel</Button>\r\n            <Button\r\n               className=\"createEventFormBtn\"\r\n               type=\"primary\"\r\n               htmlType=\"submit\"\r\n               size=\"large\"\r\n               loading={loading}\r\n            >\r\n               Create\r\n            </Button>\r\n         </Space>\r\n      </Form>\r\n   );\r\n});\r\n\r\nexport default CreateEventForm;","import React, { FC, useEffect } from 'react';\r\nimport { Modal } from 'antd';\r\nimport CreateEventForm from '../CreateEventForm';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux';\r\nimport { event_selectGuests } from '../../store/reducers/event/selectors';\r\nimport { fetchGuests } from '../../store/reducers/event/thunk-creators';\r\nimport { IEvent } from '../../models';\r\nimport { auth_selectUser } from '../../store/reducers/auth/selectors';\r\n\r\ninterface Props {\r\n   isModalOpen: boolean;\r\n   closeModal: () => void;\r\n   onSubmit: (event: IEvent) => Promise<void>;\r\n}\r\n\r\nconst CreateEventModal: FC<Props> = React.memo(({ isModalOpen, closeModal, onSubmit }) => {\r\n   const authUser = useAppSelector(auth_selectUser);\r\n   const guests = useAppSelector(event_selectGuests);\r\n\r\n   const dispatch = useAppDispatch();\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => dispatch(fetchGuests()), 1500);\r\n   }, []);\r\n\r\n   return (\r\n      <Modal\r\n         open={isModalOpen}\r\n         centered\r\n         closable={false}\r\n         footer={null}\r\n      >\r\n         <CreateEventForm\r\n            authUser={authUser}\r\n            guests={guests}\r\n            closeModal={closeModal}\r\n            onSubmit={onSubmit} />\r\n      </Modal>\r\n   );\r\n});\r\n\r\nexport default CreateEventModal; ","import { useCallback, useEffect, useState } from 'react';\r\nimport { Button, Layout } from 'antd';\r\nimport { IEvent } from '../models';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\r\nimport { createEvent, fetchEvents, removeEvent } from '../store/reducers/event/thunk-creators';\r\nimport { auth_selectUser } from '../store/reducers/auth/selectors';\r\nimport { event_selectEvents } from '../store/reducers/event/selectors';\r\nimport Preloader from '../components/Preloader';\r\nimport EventCalendar from '../components/EventCalendar';\r\nimport CreateEventModal from '../components/modals/CreateEventModal';\r\n\r\nconst EventPage = () => {\r\n   const authUser = useAppSelector(auth_selectUser);\r\n   const events = useAppSelector(event_selectEvents);\r\n\r\n   const [isModalOpen, setIsModalOpen] = useState(false);\r\n   const [isFetchingEvents, setIsFetchingEvents] = useState(true);\r\n\r\n   const dispatch = useAppDispatch();\r\n\r\n   useEffect(() => {\r\n      setTimeout(async () => {\r\n         await dispatch(fetchEvents())\r\n         setIsFetchingEvents(false);\r\n      }, 1000);\r\n   }, []);\r\n\r\n   const showModal = () => {\r\n      setIsModalOpen(true);\r\n   };\r\n\r\n   const closeModal = useCallback(() => {\r\n      setIsModalOpen(false);\r\n   }, []);\r\n\r\n   const handleRemoveEvent = useCallback((id: string) => {\r\n      dispatch(removeEvent(id));\r\n   }, []);\r\n\r\n   const handleSubmit = useCallback(async (event: IEvent) => {\r\n      await dispatch(createEvent(event));\r\n      setIsModalOpen(false);\r\n   }, []);\r\n\r\n   return (\r\n      <Layout className=\"eventPage\">\r\n         {isFetchingEvents\r\n            ? <Preloader />\r\n            : <EventCalendar\r\n               authUser={authUser!}\r\n               events={events!}\r\n               onRemoveEvent={handleRemoveEvent} />\r\n         }\r\n         <Button\r\n            className=\"eventPageBtn\"\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={isFetchingEvents}\r\n            disabled={isFetchingEvents}\r\n            onClick={showModal}\r\n         >\r\n            Create event\r\n         </Button>\r\n         <CreateEventModal\r\n            isModalOpen={isModalOpen}\r\n            closeModal={closeModal}\r\n            onSubmit={handleSubmit} />\r\n      </Layout>\r\n   );\r\n}\r\n\r\nexport default EventPage;"],"names":["createEvent","event","dispatch","data","JSON","parse","localStorage","getItem","push","setItem","stringify","EventActions","e","alert","message","event_selectGuests","state","guests","event_selectEvents","events","authUser","onRemoveEvent","className","dateCellRender","value","formattedDate","format","currentDayEvents","filter","ev","date","map","isEventCreator","id","authorId","description","DeleteOutlined","onClick","Rules","required","CreateEventForm","React","closeModal","onSubmit","useForm","form","useState","loading","setLoading","handleSubmit","selectedGuests","uuidv4","guestsId","setTimeout","resetFields","name","autoComplete","onFinish","initialValues","dayjs","label","rules","placeholder","mode","showArrow","showSearch","g","email","size","type","htmlType","CreateEventModal","isModalOpen","useAppSelector","auth_selectUser","useAppDispatch","useEffect","getState","UsersService","auth","user","u","open","centered","closable","footer","setIsModalOpen","isFetchingEvents","setIsFetchingEvents","includes","useCallback","handleRemoveEvent","updatedEvents","removeEvent","Preloader","disabled"],"sourceRoot":""}