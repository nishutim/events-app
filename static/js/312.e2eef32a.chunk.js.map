{"version":3,"file":"static/js/312.e2eef32a.chunk.js","mappings":"uPAmDA,EAvC6B,SAAH,GAAsB,IAAhBA,EAAQ,EAARA,SAC7B,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAEpBC,EAAQ,yCAAG,WAAOC,GAAwB,sEAC7CF,GAAW,GACXG,YAAU,uBAAC,mGACFN,EAASK,GAAO,OACtBF,GAAW,GAAO,2CAClB,KAAM,2CACX,gBANa,sCAQd,OACG,UAAC,IAAI,CACFI,KAAK,eACLC,UAAU,YACVJ,SAAUA,EAAS,WAEnB,eAAII,UAAU,iBAAgB,4BAC9B,SAAC,SAAS,CACPD,KAAK,QACLE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,6BAA8B,UAEjE,SAAC,IAAK,CAACC,YAAY,wBAEtB,SAAC,SAAS,CACPL,KAAK,WACLE,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAAiC,UAEpE,SAAC,IAAK,CAACE,KAAK,WAAWD,YAAY,gBAEtC,SAAC,SAAS,WACP,SAAC,IAAM,CAACV,QAASA,EAASW,KAAK,UAAUC,SAAS,SAASN,UAAU,oBAAmB,yBAMpG,E,oBC5BA,EAhBkB,WACf,IAAMO,GAAWC,EAAAA,EAAAA,KAEXC,EAAY,yCAAG,4FAASC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAClCJ,GAASK,EAAAA,EAAAA,IAAMF,EAAOC,IAAW,2CACnC,gBAFiB,sCAIlB,OACG,SAAC,IAAM,CAACX,UAAU,YAAW,UAC1B,gBAAKA,UAAU,gBAAe,UAC3B,SAAC,EAAS,CAACR,SAAUiB,OAIjC,C","sources":["components/LoginForm.tsx","pages/LoginPage.tsx"],"sourcesContent":["import { FC, useState } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\n\r\nexport interface ILoginFormValues {\r\n   email: string;\r\n   password: string;\r\n}\r\n\r\ninterface Props {\r\n   onSubmit: (values: ILoginFormValues) => Promise<void>\r\n}\r\n\r\nconst LoginForm: FC<Props> = ({ onSubmit }) => {\r\n   const [loading, setLoading] = useState(false);\r\n\r\n   const onFinish = async (values: ILoginFormValues) => {\r\n      setLoading(true);\r\n      setTimeout(async () => {\r\n         await onSubmit(values)\r\n         setLoading(false);\r\n      }, 1000);\r\n   };\r\n\r\n   return (\r\n      <Form\r\n         name=\"normal_login\"\r\n         className=\"loginForm\"\r\n         onFinish={onFinish}\r\n      >\r\n         <h2 className=\"loginFormTitle\">Authorization</h2>\r\n         <Form.Item\r\n            name=\"email\"\r\n            rules={[{ required: true, message: 'Please input your email!' }]}\r\n         >\r\n            <Input placeholder=\"Enter your email\" />\r\n         </Form.Item>\r\n         <Form.Item\r\n            name=\"password\"\r\n            rules={[{ required: true, message: 'Please input your Password!' }]}\r\n         >\r\n            <Input type=\"password\" placeholder=\"Password\" />\r\n         </Form.Item>\r\n         <Form.Item>\r\n            <Button loading={loading} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n               Sign in\r\n            </Button>\r\n         </Form.Item>\r\n      </Form>\r\n   );\r\n}\r\n\r\nexport default LoginForm;","import { Layout } from 'antd';\r\nimport LoginForm, { ILoginFormValues } from '../components/LoginForm';\r\nimport { useAppDispatch } from '../hooks/redux';\r\nimport { login } from '../store/reducers/auth/thunk-creators';\r\n\r\nconst LoginPage = () => {\r\n   const dispatch = useAppDispatch();\r\n\r\n   const handleSubmit = async ({ email, password }: ILoginFormValues) => {\r\n      dispatch(login(email, password));\r\n   }\r\n\r\n   return (\r\n      <Layout className=\"loginPage\">\r\n         <div className=\"loginPageBody\">\r\n            <LoginForm onSubmit={handleSubmit} />\r\n         </div>\r\n      </Layout>\r\n   );\r\n}\r\n\r\nexport default LoginPage;"],"names":["onSubmit","useState","loading","setLoading","onFinish","values","setTimeout","name","className","rules","required","message","placeholder","type","htmlType","dispatch","useAppDispatch","handleSubmit","email","password","login"],"sourceRoot":""}