{"version":3,"file":"static/js/757.8eb96ba6.chunk.js","mappings":"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","sources":["store/reducers/event/thunk-creators.ts","store/reducers/event/selectors.ts","components/EventCalendar.tsx","utils/validationRules.ts","components/CreateEventForm.tsx","components/modals/CreateEventModal.tsx","components/EventCalendarMobile.tsx","components/modals/EventsInfoModal.tsx","pages/EventPage.tsx"],"sourcesContent":["import { EventActions } from '.';\r\nimport { IEvent } from '../../../models';\r\nimport UsersService from '../../../services/usersService';\r\nimport { AppDispatch, RootState } from './../../index';\r\n\r\nexport const fetchGuests = () => async (dispatch: AppDispatch, getState: () => RootState) => {\r\n   try {\r\n      const data = await UsersService.fetchUsers();\r\n      const authUser = getState().auth.user;\r\n      const guests = data.filter(u => u.id !== authUser?.id);\r\n      dispatch(EventActions.fetchUsersSuccess(guests));\r\n   } catch (e: any) {\r\n      alert((e.message));\r\n   }\r\n}\r\n\r\nexport const fetchEvents = () => async (dispatch: AppDispatch, getState: () => RootState) => {\r\n   try {\r\n      const data = JSON.parse(localStorage.getItem('events') || '[]') as IEvent[];\r\n      const authUser = getState().auth.user;\r\n      const events = data.filter(ev => ev.authorId === authUser!.id || ev.guestsId.includes(authUser!.id));\r\n      dispatch(EventActions.fetchEventsSuccess(events));\r\n   } catch (e: any) {\r\n      alert((e.message));\r\n      dispatch(EventActions.fetchEventsSuccess([]));\r\n   }\r\n}\r\n\r\nexport const createEvent = (event: IEvent) => async (dispatch: AppDispatch) => {\r\n   try {\r\n      const data = JSON.parse(localStorage.getItem('events') || '[]') as IEvent[];\r\n      data.push(event);\r\n      localStorage.setItem('events', JSON.stringify(data));\r\n      dispatch(EventActions.createEventSuccess(event));\r\n   } catch (e: any) {\r\n      alert(e.message);\r\n   }\r\n}\r\n\r\nexport const removeEvent = (id: string) => async (dispatch: AppDispatch) => {\r\n   try {\r\n      const data = JSON.parse(localStorage.getItem('events')!) as IEvent[];\r\n      const updatedEvents = data.filter(ev => ev.id !== id);\r\n      localStorage.setItem('events', JSON.stringify(updatedEvents));\r\n      dispatch(EventActions.removeEventSuccess(id));\r\n   } catch (e: any) {\r\n      alert(e.message);\r\n   }\r\n}","import { RootState } from './../../index';\r\n\r\nexport const event_selectSelectedDate = (state: RootState) => state.event.selectedDate;\r\nexport const event_selectGuests = (state: RootState) => state.event.guests;\r\nexport const event_selectEvents = (state: RootState) => state.event.events;\r\nexport const event_selectError = (state: RootState) => state.event.error;","import { FC } from 'react';\r\nimport { Calendar } from 'antd';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { Dayjs } from 'dayjs';\r\nimport 'dayjs/locale/en-gb';\r\nimport locale from 'antd/es/date-picker/locale/en_GB';\r\nimport { IEvent, IUser } from '../models';\r\n\r\ninterface Props {\r\n   authUser: IUser;\r\n   events: IEvent[];\r\n   onRemoveEvent: (id: string) => void;\r\n   onSelect: (date: string) => void;\r\n}\r\n\r\nconst EventCalendar: FC<Props> = ({ authUser, events, onRemoveEvent, onSelect }) => {\r\n   const handleRemoveEvent = (id: string) => {\r\n      onRemoveEvent(id);\r\n   }\r\n\r\n   const dateCellRender = (value: Dayjs) => {\r\n      const formattedDate = value.format('YYYY-MM-DD');\r\n      const currentDayEvents = events.filter(ev => ev.date === formattedDate);\r\n\r\n      return (\r\n         <ul className=\"eventsList\">\r\n            {currentDayEvents.map(ev => {\r\n               const isEventCreator = authUser.id === ev.authorId;\r\n\r\n               return (\r\n                  <li key={ev.id} className=\"eventsListItem\">\r\n                     <span className=\"eventsListText\">{ev.description}</span>\r\n                     {isEventCreator && (\r\n                        <DeleteOutlined\r\n                           className=\"eventsListDeleteBtn\"\r\n                           onClick={() => handleRemoveEvent(ev.id)} />\r\n                     )}\r\n                  </li>\r\n               )\r\n            })}\r\n         </ul>\r\n      );\r\n   };\r\n\r\n   const handleSelect = (date: Dayjs) => {\r\n      const formattedDate = date.format('YYYY-MM-DD');\r\n      onSelect(formattedDate);\r\n   }\r\n\r\n   return (\r\n      <Calendar\r\n         className=\"eventPageCalendar\"\r\n         locale={locale}\r\n         dateCellRender={dateCellRender}\r\n         onSelect={handleSelect} />\r\n   );\r\n};\r\n\r\nexport default EventCalendar;","class Rules {\r\n   static required = (message = 'This field is required!') => {\r\n      return {\r\n         required: true,\r\n         message\r\n      }\r\n   }\r\n}\r\n\r\nexport default Rules;","import React, { FC, useEffect, useState } from 'react';\r\nimport { Button, DatePicker, Form, Input, Select, Space } from 'antd';\r\nimport { useForm } from 'antd/es/form/Form';\r\nimport dayjs, { Dayjs } from 'dayjs';\r\nimport 'dayjs/locale/en-gb';\r\nimport locale from 'antd/es/date-picker/locale/en_GB';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Rules from '../utils/validationRules';\r\nimport { IEvent, IUser } from '../models';\r\n\r\ninterface Props {\r\n   authUser: IUser | null;\r\n   guests: IUser[] | null;\r\n   selectedDate: string;\r\n   closeModal: () => void;\r\n   onSubmit: (event: IEvent) => Promise<void>;\r\n}\r\n\r\ninterface EventFormValues {\r\n   date: Dayjs;\r\n   description: string;\r\n   selectedGuests: string[];\r\n}\r\n\r\nconst CreateEventForm: FC<Props> = React.memo(({ authUser, guests, selectedDate, closeModal, onSubmit }) => {\r\n   const [form] = useForm();\r\n   const [loading, setLoading] = useState(false);\r\n\r\n   const handleSubmit = async ({ date, description, selectedGuests }: EventFormValues) => {\r\n      setLoading(true);\r\n\r\n      const event = {\r\n         id: uuidv4(),\r\n         authorId: `${authUser?.id}` || '0',\r\n         date: date.format('YYYY-MM-DD'),\r\n         description,\r\n         guestsId: selectedGuests || []\r\n      };\r\n\r\n      setTimeout(async () => {\r\n         await onSubmit(event);\r\n         form.resetFields();\r\n         setLoading(false);\r\n      }, 1000);\r\n   }\r\n\r\n   useEffect(() => {\r\n      form.setFieldsValue({\r\n         date: dayjs(selectedDate)\r\n      })\r\n   }, [selectedDate]);\r\n\r\n   return (\r\n      <Form\r\n         className=\"createEventForm\"\r\n         name=\"eventForm\"\r\n         form={form}\r\n         autoComplete=\"off\"\r\n         onFinish={handleSubmit}\r\n         initialValues={{\r\n            date: dayjs(selectedDate)\r\n         }}\r\n      >\r\n         <h3 className=\"createEventFormHeader\">Create event</h3>\r\n         <Form.Item\r\n            shouldUpdate\r\n            label=\"Select event date\"\r\n            name=\"date\"\r\n            rules={[Rules.required('Date is required!')]}\r\n         >\r\n            <DatePicker locale={locale} className=\"createEventDatePicker\" />\r\n         </Form.Item>\r\n         <Form.Item\r\n            label=\"Add event description\"\r\n            name=\"description\"\r\n            rules={[Rules.required()]}\r\n         >\r\n            <Input placeholder=\"Type your description here...\" />\r\n         </Form.Item>\r\n         <Form.Item\r\n            label=\"Select guest\"\r\n            name=\"selectedGuests\"\r\n         >\r\n            <Select mode=\"multiple\" loading={!guests} showArrow showSearch={false}>\r\n               {guests?.map(g => (\r\n                  <Select.Option key={g.id} value={g.id}>{g.email}</Select.Option>\r\n               ))}\r\n            </Select>\r\n         </Form.Item>\r\n         <Space className=\"createEventFormFooter\">\r\n            <Button size=\"large\" onClick={closeModal}>Cancel</Button>\r\n            <Button\r\n               className=\"createEventFormBtn\"\r\n               type=\"primary\"\r\n               htmlType=\"submit\"\r\n               size=\"large\"\r\n               loading={loading}\r\n            >\r\n               Create\r\n            </Button>\r\n         </Space>\r\n      </Form>\r\n   );\r\n});\r\n\r\nexport default CreateEventForm;","import React, { FC, useEffect } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { Dayjs } from 'dayjs';\r\nimport CreateEventForm from '../CreateEventForm';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux';\r\nimport { event_selectGuests } from '../../store/reducers/event/selectors';\r\nimport { fetchGuests } from '../../store/reducers/event/thunk-creators';\r\nimport { IEvent } from '../../models';\r\nimport { auth_selectUser } from '../../store/reducers/auth/selectors';\r\n\r\ninterface Props {\r\n   isModalOpen: boolean;\r\n   closeModal: () => void;\r\n   onSubmit: (event: IEvent) => Promise<void>;\r\n   selectedDate: string;\r\n}\r\n\r\nconst CreateEventModal: FC<Props> = React.memo(({ isModalOpen, closeModal, onSubmit, selectedDate }) => {\r\n   const authUser = useAppSelector(auth_selectUser);\r\n   const guests = useAppSelector(event_selectGuests);\r\n\r\n   const dispatch = useAppDispatch();\r\n\r\n   useEffect(() => {\r\n      setTimeout(() => dispatch(fetchGuests()), 1500);\r\n   }, []);\r\n\r\n   return (\r\n      <Modal\r\n         open={isModalOpen}\r\n         centered\r\n         closable={false}\r\n         footer={null}\r\n      >\r\n         <CreateEventForm\r\n            authUser={authUser}\r\n            guests={guests}\r\n            selectedDate={selectedDate}\r\n            closeModal={closeModal}\r\n            onSubmit={onSubmit} />\r\n      </Modal>\r\n   );\r\n});\r\n\r\nexport default CreateEventModal; ","import { FC } from 'react';\r\nimport { Calendar } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { Dayjs } from 'dayjs';\r\nimport 'dayjs/locale/en-gb';\r\nimport locale from 'antd/es/date-picker/locale/en_GB';\r\nimport { IEvent } from '../models';\r\n\r\ninterface Props {\r\n   events: IEvent[];\r\n   onSelect: (date: string) => void;\r\n}\r\n\r\nconst EventCalendarMobile: FC<Props> = ({ events, onSelect }) => {\r\n   const dateCellRender = (value: Dayjs) => {\r\n      const formattedDate = value.format('YYYY-MM-DD');\r\n      const currentDayEvents = events.filter(ev => ev.date === formattedDate);\r\n\r\n      return (\r\n         currentDayEvents.length > 0 ?\r\n            <div className=\"eventCalendarMobileNotification\">\r\n               <ExclamationCircleOutlined className=\"eventCalendartMobileIcon\" />\r\n               <p className=\"eventCalendartMobileText\">Info!</p>\r\n            </div>\r\n            :\r\n            <></>\r\n\r\n      );\r\n   };\r\n\r\n   const handleSelect = (date: Dayjs) => {\r\n      const formattedDate = date.format('YYYY-MM-DD');\r\n      onSelect(formattedDate);\r\n   }\r\n\r\n   return (\r\n      <Calendar\r\n         className=\"eventCalendarMobile\"\r\n         locale={locale}\r\n         dateCellRender={dateCellRender}\r\n         onSelect={handleSelect} />\r\n   );\r\n}\r\n\r\nexport default EventCalendarMobile;","import React, { FC } from 'react';\r\nimport { Button, Modal } from 'antd';\r\nimport { IEvent, IUser } from '../../models';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n   authUser: IUser;\r\n   selectedDateEvents: IEvent[];\r\n   isModalOpen: boolean;\r\n   closeModal: () => void;\r\n   onRemoveEvent: (id: string) => void;\r\n}\r\n\r\nconst EventsInfoModal: FC<Props> = ({ authUser, selectedDateEvents, isModalOpen, closeModal, onRemoveEvent }) => {\r\n   const handleCancel = () => {\r\n      closeModal();\r\n   }\r\n\r\n   const handleRemoveEvent = (id: string) => {\r\n      onRemoveEvent(id);\r\n   }\r\n\r\n   return (\r\n      <Modal\r\n         className=\"eventsInfoModal\"\r\n         open={isModalOpen}\r\n         centered\r\n         closable={false}\r\n         footer={null}\r\n         onCancel={handleCancel}\r\n      >\r\n         <h4 className=\"eventsInfoModalHeader\">Events that you have on this day:</h4>\r\n         {selectedDateEvents.length > 0 ?\r\n            <ul className=\"eventsList\">\r\n               {selectedDateEvents.map(ev => {\r\n                  const isEventCreator = authUser.id === ev.authorId;\r\n\r\n                  return (\r\n                     <li key={ev.id} className=\"eventsListItem\">\r\n                        <span className=\"eventsListText\">{ev.description}</span>\r\n                        {isEventCreator && (\r\n                           <DeleteOutlined\r\n                              className=\"eventsListDeleteBtn\"\r\n                              onClick={() => handleRemoveEvent(ev.id)} />\r\n                        )}\r\n                     </li>\r\n                  )\r\n               })}\r\n            </ul>\r\n            :\r\n            <div className=\"eventsInfoText\">You are not having any events on this day...</div>\r\n         }\r\n         <Button className=\"eventsInfoModalBtn\" onClick={handleCancel}>\r\n            Cancel\r\n         </Button>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport default EventsInfoModal;","import { useCallback, useEffect, useState } from 'react';\r\nimport { Button, Layout } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport { IEvent } from '../models';\r\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\r\nimport { createEvent, fetchEvents, removeEvent } from '../store/reducers/event/thunk-creators';\r\nimport { auth_selectUser } from '../store/reducers/auth/selectors';\r\nimport { event_selectEvents, event_selectSelectedDate } from '../store/reducers/event/selectors';\r\nimport Preloader from '../components/Preloader';\r\nimport EventCalendar from '../components/EventCalendar';\r\nimport CreateEventModal from '../components/modals/CreateEventModal';\r\nimport EventCalendarMobile from '../components/EventCalendarMobile';\r\nimport EventsInfoModal from '../components/modals/EventsInfoModal';\r\nimport { EventActions } from '../store/reducers/event';\r\n\r\nconst EventPage = () => {\r\n   const authUser = useAppSelector(auth_selectUser);\r\n   const selectedDate = useAppSelector(event_selectSelectedDate);\r\n   const events = useAppSelector(event_selectEvents);\r\n\r\n   const [isCreateEventModalOpen, setIsCreateEventModalOpen] = useState(false);\r\n   const [isEventsInfoModalOpen, setIsEventsInfoModalOpen] = useState(false);\r\n   const [isFetchingEvents, setIsFetchingEvents] = useState(true);\r\n   const [selectedDateEvents, setSelectedDateEvents] = useState<IEvent[]>([]);\r\n\r\n   const dispatch = useAppDispatch();\r\n\r\n   const showCreateEventModal = () => {\r\n      setIsCreateEventModalOpen(true);\r\n   };\r\n\r\n   const closeCreateEventModal = useCallback(() => {\r\n      setIsCreateEventModalOpen(false);\r\n   }, []);\r\n\r\n   const showEventsInfoModal = () => {\r\n      setIsEventsInfoModalOpen(true);\r\n   };\r\n\r\n   const closeEventsInfoModal = useCallback(() => {\r\n      setIsEventsInfoModalOpen(false);\r\n   }, []);\r\n\r\n   const handleRemoveEvent = useCallback((id: string) => {\r\n      dispatch(removeEvent(id));\r\n      setSelectedDateEvents(selectedDateEvents.filter(ev => ev.id !== id));\r\n   }, []);\r\n\r\n   const handleDateSelect = useCallback((date: string) => {\r\n      dispatch(EventActions.setSelectedDate(date));\r\n   }, []);\r\n\r\n   const handleDateSelectMobile = useCallback((date: string) => {\r\n      const currentDateEvents = events!.filter(ev => ev.date === date);\r\n      setSelectedDateEvents(currentDateEvents);\r\n      showEventsInfoModal();\r\n   }, [events]);\r\n\r\n   const handleSubmit = useCallback(async (event: IEvent) => {\r\n      await dispatch(createEvent(event));\r\n      setIsCreateEventModalOpen(false);\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      setTimeout(async () => {\r\n         await dispatch(fetchEvents())\r\n         setIsFetchingEvents(false);\r\n      }, 1000);\r\n\r\n      handleDateSelect(dayjs().format('YYYY-MM-DD'));\r\n   }, []);\r\n\r\n   return (\r\n      <Layout className=\"eventPage\">\r\n         <Button\r\n            className=\"eventPageBtn\"\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={isFetchingEvents}\r\n            disabled={isFetchingEvents}\r\n            onClick={showCreateEventModal}\r\n         >\r\n            Create event\r\n         </Button>\r\n         {isFetchingEvents\r\n            ? <Preloader />\r\n            : <>\r\n               <EventCalendar\r\n                  authUser={authUser!}\r\n                  events={events!}\r\n                  onRemoveEvent={handleRemoveEvent}\r\n                  onSelect={handleDateSelect} />\r\n               <EventCalendarMobile\r\n                  events={events!}\r\n                  onSelect={handleDateSelectMobile} />\r\n               <CreateEventModal\r\n                  isModalOpen={isCreateEventModalOpen}\r\n                  closeModal={closeCreateEventModal}\r\n                  onSubmit={handleSubmit}\r\n                  selectedDate={selectedDate!} />\r\n               <EventsInfoModal\r\n                  authUser={authUser!}\r\n                  selectedDateEvents={selectedDateEvents}\r\n                  isModalOpen={isEventsInfoModalOpen}\r\n                  closeModal={closeEventsInfoModal}\r\n                  onRemoveEvent={handleRemoveEvent} />\r\n            </>\r\n         }\r\n      </Layout>\r\n   );\r\n}\r\n\r\nexport default EventPage;"],"names":["createEvent","event","dispatch","data","JSON","parse","localStorage","getItem","push","setItem","stringify","EventActions","e","alert","message","event_selectSelectedDate","state","selectedDate","event_selectGuests","guests","event_selectEvents","events","authUser","onRemoveEvent","onSelect","className","locale","dateCellRender","value","formattedDate","format","currentDayEvents","filter","ev","date","map","isEventCreator","id","authorId","description","DeleteOutlined","onClick","Rules","required","CreateEventForm","React","closeModal","onSubmit","useForm","form","useState","loading","setLoading","handleSubmit","selectedGuests","uuidv4","guestsId","setTimeout","resetFields","useEffect","setFieldsValue","dayjs","name","autoComplete","onFinish","initialValues","shouldUpdate","label","rules","placeholder","mode","showArrow","showSearch","g","email","size","type","htmlType","CreateEventModal","isModalOpen","useAppSelector","auth_selectUser","useAppDispatch","getState","UsersService","auth","user","u","open","centered","closable","footer","length","ExclamationCircleOutlined","selectedDateEvents","handleCancel","onCancel","isCreateEventModalOpen","setIsCreateEventModalOpen","isEventsInfoModalOpen","setIsEventsInfoModalOpen","isFetchingEvents","setIsFetchingEvents","setSelectedDateEvents","closeCreateEventModal","useCallback","closeEventsInfoModal","handleRemoveEvent","updatedEvents","removeEvent","handleDateSelect","handleDateSelectMobile","currentDateEvents","includes","disabled","Preloader"],"sourceRoot":""}